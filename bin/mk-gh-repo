#!/bin/sh -eu

. "$HOME/.config/lib/get_github_cred.sh"
. "$HOME/.config/lib/panic.sh"

usage() {
cat <<EOF 1>&2
usage: $(basename "$0") [options]

options:
	-d <desc>
		use the repo description <desc>
	-h
		show this help
	-n <name>
		use the repo name <name>
	-p
		make the repo private
EOF
exit 1
}

d=""
n="$(basename "$PWD")"
p=false
while getopts "d:hn:p" opt; do
	case "$opt" in
	(d) d="$OPTARG" ;;
	(n) n="$OPTARG" ;;
	(p) p=true ;;
	(*) usage ;;
	esac
done
shift $((OPTIND - 1))

if [ $# -ne 0 ]; then
	usage
fi

git rev-parse

github_name="$(get_github_cred username)"
github_password="$(get_github_cred password)"

# there must be spaces surrounding { and } in the json data
# e761df8a36c4e302ebda8b792f70d631b0e8452d
url="https://github.com/$github_name/$n.git"
git remote add origin "$url"
if [ \
	"$(curl \
		-H "Accept: application/vnd.github.v3+json" \
		-H "Content-Type: application/json" \
		-H "Authorization: token $github_password" \
		-X POST \
		-d " { \"name\":\"$n\", \"description\":\"$d\", \"private\":$p } " \
		-s \
		-o /dev/null \
		-w "%{http_code}" \
		"https://api.github.com/user/repos" \
	)" -ne 201 \
]; then
	panic "could not create"
fi
