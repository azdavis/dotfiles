#!/bin/sh

. "$HOME/.config/lib/base.sh"
. "$HOME/.config/lib/abort.sh"

usage() {
    abort "usage: $(basename "$0") [-t type] <name> <description>"
}

t=""
while getopts t: opt; do
    case "$opt" in
    (t) t="$OPTARG" ;;
    (?) usage ;;
    esac
done
shift "$(expr "$OPTIND" - 1)"

if [ $# -ne 2 ]; then
    usage
fi

if ! user="$(git config --global user.name)"; then
    abort "no git user.name found"
fi

templates="$HOME/.config/templates"
relative_name="$1"
absolute_name="$PWD/$relative_name"
description="$2"
year="$(date +%Y)"

if [ -e "$relative_name" ]; then
    abort "'$relative_name' already exists"
fi

if ! [ -d "$templates/$t" ]; then
    abort "invalid type: '$t'"
fi

replace() {
    cat \
        | sed "s/{{description}}/$description/g" \
        | sed "s/{{name}}/$relative_name/g" \
        | sed "s/{{user}}/$user/g" \
        | sed "s/{{year}}/$year/g"
}

dst_name() {
    echo "$absolute_name/$1" | replace
}

add_dir() {
    b="$(basename "$1")"
    if [ "$b" = . ] || [ "$b" = .. ]; then
        return
    fi
    mkdir -p "$(dst_name "$1")"
    add "$1"
}

add_file() {
    cat "$1" | replace >> "$(dst_name "$1")"
}

add() {
    for x in "$1"/* "$1"/.*; do
        if [ -d "$x" ]; then
            add_dir "$x"
        else
            add_file "$x"
        fi
    done
}

add_template() {
    echo "adding template '$1'"
    cd "$templates/$1"
    add .
}


echo "creating '$relative_name'"
mkdir -p "$absolute_name/src"
add_template base
if [ -n "$t" ]; then
    add_template "$t"
fi

cd "$absolute_name"
sort -o .gitignore .gitignore

github_token="$( \
    echo hostname=github.com \
        | git credential-store get \
        | grep password \
        | sed "s/password=//g" \
)"

echo "creating local git repository"
git init -q
git remote add origin "https://github.com/$user/$relative_name.git"
git add -A
git commit -q -m "start project"

echo "creating remote github repository"
curl \
    -s \
    -H "Accept: application/vnd.github.v3+json" \
    -H "Content-Type: application/json" \
    -H "Authorization: token $github_token" \
    -X POST \
    -d "{\"name\":\"$relative_name\",\"description\":\"$description\"}" \
    "https://api.github.com/user/repos" \
    > /dev/null
git push -q -u origin master > /dev/null
